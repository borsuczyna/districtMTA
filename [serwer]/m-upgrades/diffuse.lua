--
-- c_getMaterialDiffuseColor.lua
--

-- Big list describing object color for chosen weather (0 - 25) at a particular time (timeH, timeM, colorR, colorG, colorB)

diffuseColorTable = {
    { { 0, 0, 49, 49, 49 }, { 4, 0, 49, 49, 49 }, { 7, 0, 91, 85, 85 }, { 8, 40, 92, 85, 85 }, { 10, 20, 95, 86, 86 }, { 12, 0, 99, 88, 88 }, { 13, 45, 97, 88, 88 }, 
        { 14, 20, 95, 87, 87 }, { 15, 30, 95, 89, 89 }, { 17, 15, 93, 89, 89 }, { 19, 0, 93, 90, 90 }, { 19, 50, 119, 109, 109 }, { 20, 0, 122, 112, 112 }, 
        { 21, 0, 50, 45, 45 }, { 21, 20, 50, 46, 46 }, { 21, 30, 48, 45, 45 }, { 21, 40, 48, 46, 46 }, { 22, 0, 48, 47, 47 }, { 23, 0, 48, 48, 48 }, { 23, 59, 49, 49, 49 } }, 
    { { 0, 0, 27, 46, 46 }, { 4, 0, 31, 46, 46 }, { 5, 0, 31, 44, 44 }, { 6, 0, 48, 43, 34 }, { 7, 0, 102, 94, 90 }, { 8, 40, 101, 95, 89 }, { 10, 20, 101, 97, 89 }, 
        { 12, 0, 101, 99, 89 }, { 13, 45, 103, 100, 90 }, { 15, 30, 104, 100, 90 }, { 17, 15, 106, 101, 91 }, { 19, 0, 104, 100, 91 }, { 19, 50, 100, 99, 92 }, 
        { 20, 0, 101, 99, 93 }, { 21, 0, 41, 39, 31 }, { 21, 20, 43, 41, 33 }, { 21, 30, 45, 43, 33 }, { 21, 40, 46, 44, 35 }, { 22, 0, 48, 47, 37 }, { 22, 20, 43, 46, 37 }, 
        { 23, 0, 36, 46, 41 }, { 23, 59, 26, 46, 45 } }, 
    { { 0, 0, 67, 69, 69 }, { 4, 0, 60, 70, 70 }, { 5, 0, 57, 68, 68 }, { 6, 0, 44, 40, 40 }, { 7, 0, 100, 96, 90 }, { 8, 40, 101, 96, 90 }, { 10, 20, 103, 97, 91 }, 
        { 12, 0, 103, 97, 92 }, { 13, 45, 101, 96, 91 }, { 14, 20, 101, 97, 92 }, { 15, 30, 99, 96, 91 }, { 17, 15, 97, 96, 91 }, { 19, 0, 97, 96, 92 }, { 19, 50, 97, 92, 92 }, 
        { 20, 0, 96, 91, 91 }, { 21, 0, 39, 31, 33 }, { 21, 20, 43, 34, 36 }, { 21, 30, 44, 35, 37 }, { 21, 40, 46, 36, 39 }, { 22, 0, 50, 40, 43 }, { 22, 20, 52, 44, 47 }, 
        { 23, 0, 59, 54, 56 }, { 23, 59, 68, 69, 68 } }, 
    { { 0, 0, 70, 70, 70 }, { 4, 0, 69, 69, 69 }, { 7, 0, 113, 104, 98 }, { 8, 40, 111, 102, 96 }, { 10, 20, 107, 99, 92 }, { 12, 0, 105, 98, 91 }, { 13, 45, 106, 99, 91 }, 
        { 15, 30, 106, 100, 91 }, { 17, 15, 106, 101, 91 }, { 19, 0, 106, 100, 91 }, { 19, 50, 106, 96, 91 }, { 20, 0, 104, 94, 89 }, { 21, 0, 53, 37, 35 }, { 21, 20, 59, 41, 40 }, 
        { 21, 30, 61, 43, 42 }, { 21, 40, 64, 44, 44 }, { 22, 0, 70, 49, 49 }, { 22, 20, 70, 53, 53 }, { 23, 0, 70, 60, 60 }, { 23, 59, 70, 69, 69 } }, 
    { { 0, 0, 45, 63, 63 }, { 4, 0, 42, 56, 59 }, { 5, 0, 42, 57, 59 }, { 6, 0, 50, 64, 64 }, { 7, 0, 119, 119, 119 }, { 10, 20, 118, 118, 118 }, { 13, 45, 223, 223, 223 }, 
        { 17, 15, 119, 119, 118 }, { 21, 0, 53, 55, 50 }, { 21, 20, 54, 57, 51 }, { 21, 40, 55, 59, 52 }, { 22, 0, 56, 61, 53 }, { 22, 20, 53, 61, 54 }, { 23, 0, 50, 63, 59 }, 
        { 23, 59, 43, 63, 63 } }, 
    { { 0, 0, 53, 64, 64 }, { 4, 0, 55, 64, 64 }, { 6, 0, 63, 63, 64 }, { 7, 0, 127, 129, 133 }, { 8, 40, 129, 130, 133 }, { 10, 20, 131, 131, 133 }, { 12, 0, 132, 132, 132 }, 
        { 13, 45, 147, 147, 147 }, { 17, 15, 132, 132, 133 }, { 21, 0, 55, 55, 64 }, { 21, 20, 52, 52, 64 }, { 21, 30, 50, 50, 64 }, { 21, 40, 49, 49, 64 }, { 22, 0, 46, 46, 64 }, 
        { 22, 20, 48, 50, 64 }, { 23, 0, 50, 56, 64 }, { 23, 59, 53, 63, 64 } }, 
    { { 0, 0, 54, 64, 64 }, { 4, 0, 53, 63, 63 }, { 6, 0, 46, 50, 57 }, { 7, 0, 102, 90, 90 }, { 8, 40, 112, 104, 104 }, { 10, 20, 122, 118, 118 }, { 12, 0, 133, 133, 133 }, 
        { 13, 45, 172, 172, 172 }, { 17, 15, 132, 132, 133 }, { 21, 0, 54, 54, 63 }, { 21, 20, 52, 52, 64 }, { 21, 30, 50, 50, 64 }, { 21, 40, 49, 49, 64 }, { 22, 0, 46, 46, 64 }, 
        { 22, 20, 48, 50, 64 }, { 23, 0, 50, 56, 64 }, { 23, 59, 53, 63, 64 } }, 
    { { 0, 0, 64, 63, 64 }, { 4, 0, 64, 57, 64 }, { 5, 0, 64, 57, 64 }, { 6, 0, 63, 63, 63 }, { 7, 0, 105, 105, 112 }, { 8, 40, 95, 95, 104 }, { 10, 20, 95, 95, 104 }, 
        { 12, 0, 95, 95, 102 }, { 13, 45, 98, 105, 109 }, { 14, 20, 100, 108, 113 }, { 15, 30, 102, 114, 118 }, { 17, 15, 105, 124, 125 }, { 19, 0, 109, 134, 134 }, 
        { 19, 50, 130, 134, 134 }, { 20, 0, 133, 133, 133 }, { 21, 0, 66, 66, 66 }, { 21, 20, 64, 63, 64 }, { 23, 59, 64, 63, 64 } }, 
    { { 0, 0, 54, 64, 64 }, { 4, 0, 54, 64, 64 }, { 5, 0, 72, 81, 81 }, { 6, 0, 54, 64, 64 }, { 7, 0, 123, 133, 133 }, { 8, 40, 123, 133, 133 }, { 10, 20, 123, 133, 133 }, 
        { 12, 0, 123, 133, 133 }, { 13, 45, 123, 133, 133 }, { 14, 20, 123, 133, 133 }, { 15, 30, 123, 133, 133 }, { 19, 0, 122, 132, 132 }, { 21, 0, 68, 78, 78 }, 
        { 21, 30, 54, 64, 64 }, { 21, 40, 54, 64, 64 }, { 22, 0, 54, 64, 64 }, { 22, 20, 54, 64, 64 }, { 23, 0, 54, 64, 64 }, { 23, 59, 54, 64, 64 } }, 
    { { 0, 0, 68, 69, 69 }, { 4, 0, 64, 64, 64 }, { 6, 0, 71, 71, 71 }, { 7, 0, 137, 137, 137 }, { 8, 40, 125, 125, 125 }, { 10, 20, 112, 112, 112 }, { 12, 0, 102, 102, 102 }, 
        { 13, 45, 130, 130, 130 }, { 17, 15, 102, 102, 102 }, { 21, 0, 52, 52, 52 }, { 21, 20, 58, 58, 58 }, { 21, 30, 61, 61, 61 }, { 21, 40, 64, 64, 64 }, { 22, 0, 70, 70, 70 }, 
        { 23, 0, 70, 70, 70 }, { 23, 59, 70, 70, 70 } }, 
    { { 0, 0, 54, 51, 52 }, { 4, 0, 53, 45, 53 }, { 5, 0, 52, 44, 53 }, { 6, 0, 17, 22, 26 }, { 7, 0, 103, 103, 92 }, { 8, 40, 131, 131, 92 }, { 10, 20, 103, 103, 91 }, 
        { 13, 45, 96, 96, 88 }, { 14, 20, 94, 94, 87 }, { 15, 30, 92, 92, 87 }, { 17, 15, 92, 92, 88 }, { 19, 0, 92, 92, 86 }, { 19, 50, 91, 91, 85 }, { 21, 0, 22, 19, 22 }, 
        { 21, 20, 24, 20, 24 }, { 21, 30, 26, 21, 26 }, { 21, 40, 28, 23, 28 }, { 22, 0, 32, 26, 32 }, { 22, 20, 35, 30, 34 }, { 23, 0, 43, 39, 42 }, { 23, 59, 53, 53, 50 } }, 
    { { 0, 0, 48, 48, 48 }, { 4, 0, 34, 34, 34 }, { 5, 0, 30, 30, 30 }, { 6, 0, 32, 31, 31 }, { 7, 0, 103, 94, 90 }, { 8, 40, 103, 97, 90 }, { 10, 20, 103, 100, 90 }, 
        { 12, 0, 103, 103, 90 }, { 13, 45, 102, 102, 90 }, { 14, 20, 116, 116, 90 }, { 17, 15, 102, 102, 89 }, { 21, 0, 41, 41, 35 }, { 21, 20, 44, 44, 40 }, { 21, 30, 44, 44, 42 }, 
        { 21, 40, 46, 46, 45 }, { 22, 0, 50, 50, 50 }, { 23, 59, 48, 48, 48 } }, 
    { { 0, 0, 39, 56, 68 }, { 4, 0, 46, 58, 70 }, { 5, 0, 48, 59, 70 }, { 6, 0, 58, 58, 68 }, { 7, 0, 119, 119, 119 }, { 13, 45, 118, 118, 118 }, { 19, 50, 94, 94, 104 }, 
        { 20, 0, 91, 91, 102 }, { 21, 0, 31, 40, 52 }, { 21, 20, 33, 45, 57 }, { 21, 30, 35, 48, 61 }, { 21, 40, 36, 51, 63 }, { 22, 0, 39, 57, 70 }, { 23, 59, 39, 56, 68 } }, 
    { { 0, 0, 66, 67, 49 }, { 4, 0, 54, 57, 53 }, { 5, 0, 51, 53, 53 }, { 6, 0, 51, 52, 51 }, { 7, 0, 120, 121, 119 }, { 8, 40, 119, 113, 113 }, { 10, 20, 119, 107, 107 }, 
        { 12, 0, 118, 102, 102 }, { 13, 45, 119, 106, 106 }, { 14, 20, 119, 108, 108 }, { 15, 30, 119, 111, 111 }, { 17, 15, 119, 115, 115 }, { 19, 0, 117, 117, 117 }, { 19, 50, 92, 92, 88 }, 
        { 20, 0, 90, 90, 84 }, { 21, 0, 34, 34, 27 }, { 21, 20, 39, 39, 31 }, { 21, 30, 41, 41, 33 }, { 21, 40, 44, 44, 35 }, { 22, 0, 50, 50, 40 }, { 22, 20, 53, 53, 41 }, 
        { 23, 0, 64, 64, 44 }, { 23, 59, 66, 67, 49 }, }, 
    { { 0, 0, 68, 68, 67 }, { 4, 0, 54, 57, 57 }, { 5, 0, 51, 53, 53 }, { 6, 0, 50, 50, 50 }, { 7, 0, 91, 91, 91 }, { 8, 40, 98, 98, 93 }, { 10, 20, 109, 109, 97 }, 
        { 12, 0, 118, 118, 101 }, { 13, 45, 118, 118, 102 }, { 15, 30, 144, 144, 102 }, { 17, 15, 129, 129, 102 }, { 19, 0, 117, 117, 101 }, { 19, 50, 117, 117, 114 }, 
        { 20, 0, 117, 117, 117 }, { 21, 0, 59, 59, 59 }, { 21, 20, 63, 63, 63 }, { 21, 30, 64, 64, 64 }, { 21, 40, 66, 66, 66 }, { 22, 0, 70, 70, 70 }, { 23, 59, 68, 68, 6 } }, 
    { { 0, 0, 50, 59, 72 }, { 4, 0, 40, 55, 70 }, { 5, 0, 39, 54, 68 }, { 6, 0, 40, 50, 49 }, { 7, 0, 107, 117, 116 }, { 8, 40, 100, 108, 106 }, { 10, 20, 91, 95, 96 }, 
        { 12, 0, 86, 91, 91 }, { 14, 20, 85, 91, 91 }, { 19, 0, 85, 90, 91 }, { 19, 50, 100, 99, 113 }, { 20, 0, 103, 102, 119 }, { 21, 0, 37, 45, 59 }, { 21, 20, 39, 52, 63 }, 
        { 21, 30, 39, 52, 64 }, { 21, 40, 40, 55, 66 }, { 22, 0, 42, 59, 70 }, { 22, 20, 43, 59, 70 }, { 23, 0, 46, 60, 72 }, { 23, 59, 50, 60, 72 } }, 
    { { 0, 0, 61, 62, 79 }, { 4, 0, 65, 65, 68 }, { 5, 0, 66, 66, 66 }, { 6, 0, 64, 64, 64 }, { 7, 0, 117, 117, 117 }, { 8, 40, 117, 117, 117 }, { 10, 20, 117, 117, 117 }, 
        { 12, 0, 117, 117, 117 }, { 13, 45, 117, 117, 117 }, { 15, 30, 117, 117, 117 }, { 17, 15, 117, 117, 117 }, { 19, 0, 120, 119, 120 }, { 19, 50, 255, 255, 255 }, 
        { 21, 0, 255, 223, 242 }, { 21, 20, 198, 169, 185 }, { 21, 30, 165, 143, 157 }, { 21, 40, 131, 117, 128 }, { 22, 0, 72, 72, 81 }, { 22, 20, 70, 70, 81 }, { 23, 0, 67, 67, 81 }, 
        { 23, 59, 61, 62, 79 } }, 
    { { 0, 0, 26, 26, 33 }, { 4, 0, 26, 26, 35 }, { 5, 0, 27, 27, 37 }, { 6, 0, 33, 33, 49 }, { 7, 0, 95, 95, 95 }, { 8, 40, 91, 91, 91 }, { 14, 20, 90, 90, 90 }, 
        { 21, 0, 18, 18, 22 }, { 21, 20, 19, 19, 24 }, { 21, 30, 19, 19, 24 }, { 21, 40, 22, 22, 28 }, { 22, 0, 24, 24, 30 }, { 23, 59, 26, 26, 33 } }, 
    { { 0, 0, 34, 34, 43 }, { 4, 0, 32, 32, 37 }, { 5, 0, 31, 31, 37 }, { 6, 0, 31, 31, 48 }, { 7, 0, 92, 92, 92 }, { 13, 45, 91, 91, 91 }, { 21, 0, 20, 20, 20 }, 
        { 21, 20, 23, 23, 23 }, { 21, 40, 24, 24, 24 }, { 22, 0, 28, 28, 28 }, { 22, 20, 30, 30, 31 }, { 23, 0, 32, 32, 37 }, { 23, 59, 35, 35, 44 } }, 
    { { 0, 0, 47, 47, 48 }, { 4, 0, 49, 49, 49 }, { 7, 0, 115, 115, 115 }, { 8, 40, 109, 109, 109 }, { 10, 20, 103, 103, 103 }, { 12, 0, 97, 97, 97 }, { 13, 45, 104, 104, 104 }, 
        { 15, 30, 108, 108, 108 }, { 17, 15, 113, 113, 113 }, { 19, 0, 117, 117, 117 }, { 19, 50, 115, 115, 115 }, { 21, 0, 48, 48, 48 }, { 22, 20, 47, 47, 47 }, { 23, 59, 47, 47, 47 } }, 
    { { 0, 0, 47, 47, 47 }, { 4, 0, 49, 49, 49 }, { 7, 0, 119, 119, 119 }, { 8, 40, 150, 150, 150 }, { 13, 45, 116, 116, 116 }, { 19, 50, 116, 116, 116 }, { 21, 0, 48, 48, 48 }, 
        { 22, 20, 47, 47, 47 }, { 23, 59, 47, 47, 47 } }, 
    { { 0, 0, 23, 23, 23 }, { 4, 0, 23, 23, 23 }, { 7, 0, 93, 93, 93 }, { 8, 40, 91, 85, 87 }, { 10, 20, 91, 86, 87 }, { 12, 0, 92, 87, 88 }, { 13, 45, 92, 89, 88 }, { 15, 30, 92, 90, 87 }, 
        { 17, 15, 92, 92, 87 }, { 19, 0, 91, 93, 86 }, { 19, 50, 88, 91, 85 }, { 20, 0, 90, 90, 90 }, { 21, 0, 20, 20, 20 }, { 23, 59, 23, 23, 23 } }, 
    { { 0, 0, 23, 23, 23 }, { 4, 0, 53, 53, 53 }, { 5, 0, 61, 61, 61 }, { 6, 0, 23, 23, 23 }, { 7, 0, 91, 91, 91 }, { 13, 45, 90, 90, 90 }, { 21, 0, 20, 20, 20 }, { 23, 59, 23, 23, 23 } }, 
    { { 0, 0, 48, 48, 48 }, { 4, 0, 49, 49, 49 }, { 6, 0, 23, 17, 17 }, { 7, 0, 99, 89, 89 }, { 8, 40, 95, 87, 87 }, { 10, 20, 93, 88, 88 }, { 12, 0, 93, 90, 90 }, 
        { 13, 45, 103, 97, 97 }, { 14, 20, 103, 98, 98 }, { 15, 30, 109, 102, 102 }, { 17, 15, 117, 107, 107 }, { 19, 0, 122, 112, 112 }, { 19, 50, 117, 115, 115 }, 
        { 20, 0, 115, 115, 115 }, { 21, 0, 41, 48, 48 }, { 21, 20, 38, 48, 48 }, { 21, 30, 37, 48, 48 }, { 21, 40, 36, 48, 48 }, { 22, 0, 36, 50, 50 }, { 22, 20, 38, 50, 50 }, 
        { 23, 0, 43, 49, 49 }, { 23, 59, 50, 50, 50 } }, 
    { { 0, 0, 32, 44, 44 }, { 4, 0, 44, 42, 35 }, { 5, 0, 48, 43, 34 }, { 6, 0, 33, 25, 21 }, { 7, 0, 101, 99, 89 }, { 8, 40, 104, 100, 90 }, { 10, 20, 105, 101, 91 }, 
        { 13, 45, 104, 100, 91 }, { 15, 30, 103, 100, 92 }, { 17, 15, 101, 99, 92 }, { 19, 0, 101, 99, 93 }, { 19, 50, 115, 113, 104 }, { 20, 0, 117, 115, 106 }, { 21, 0, 32, 31, 37 }, 
        { 21, 20, 29, 29, 39 }, { 21, 30, 29, 28, 41 }, { 21, 40, 28, 27, 43 }, { 22, 0, 26, 26, 46 }, { 22, 20, 27, 29, 46 }, { 23, 0, 29, 36, 46 }, { 23, 59, 31, 45, 46 } }, 
    { { 0, 0, 56, 67, 67 }, { 4, 0, 46, 44, 44 }, { 5, 0, 44, 40, 40 }, { 6, 0, 31, 27, 21 }, { 7, 0, 104, 98, 93 }, { 8, 40, 102, 98, 93 }, { 10, 20, 100, 98, 93 }, 
        { 12, 0, 98, 97, 93 }, { 13, 45, 98, 96, 93 }, { 14, 20, 98, 95, 93 }, { 15, 30, 98, 95, 93 }, { 17, 15, 98, 93, 93 }, { 19, 0, 100, 94, 94 }, { 19, 50, 116, 106, 109 }, 
        { 20, 0, 118, 109, 112 }, { 21, 0, 39, 51, 53 }, { 21, 20, 39, 58, 59 }, { 21, 30, 38, 61, 61 }, { 21, 40, 37, 63, 64 }, { 22, 0, 37, 70, 70 }, { 22, 20, 41, 70, 70 }, 
        { 23, 0, 48, 70, 70 }, { 23, 59, 56, 67, 67 } }, 
                    }
    
    local lastWeather, weatherNumber = 0, 0
    local tempDiffuseColorTable = {}
    local isDiffuseTableReady = false
    addEventHandler("onClientResourceStart", resourceRoot, 
        function()
            for i, v in ipairs(diffuseColorTable) do
                tempDiffuseColorTable[i] = v
            end
            weatherNumber = getWeather()
            if weatherNumber > 25 then 
                weatherNumber = 0 
            end
            lastWeather = weatherNumber
            isDiffuseTableReady = true
        end
    )
    
    local lastTick = 0
    addEventHandler("onClientPreRender", root, 
        function()
            if getTickCount() - lastTick < 600 or not isDiffuseTableReady then 
                return 
            end	
            weatherNumber = getWeather()
            if weatherNumber ~= lastWeather then
                if weatherNumber > 25 then 
                    weatherNumber = 0 
                end
                lastWeather = weatherNumber
            end
        end
    )
    
    local lastColor = Vector4(0,0,0,0)
    function getMaterialDiffuseColor ()
        if getTickCount() - lastTick < 600 or not isDiffuseTableReady then 
            return lastColor 
        end
        -- Get game time
        local h, m = getTime()
        local fhoursNow = h + m / 60
    
        -- Find which two lines in the diffuseColorTable to blend between
        for idx,v in ipairs( tempDiffuseColorTable[lastWeather + 1] ) do
            local fhoursTo = v[1] + v[2] / 60
            if fhoursNow <= fhoursTo then
    
                -- Work out blend from line
                local vFrom = tempDiffuseColorTable[lastWeather + 1][ math.max( idx-1, 1 ) ]
                local fhoursFrom = vFrom[1] + vFrom[2] / 60
    
                -- Calc blend factor
                local f = math.unlerp( fhoursFrom, fhoursNow, fhoursTo )
    
                -- Calc final color
                local x = math.lerp( vFrom[3], f, v[3] )
                local y = math.lerp( vFrom[4], f, v[4] )
                local z = math.lerp( vFrom[5], f, v[5] )
                
                lastColor = Vector4(x / 255, y / 255, z / 255, 1)
                
                return lastColor
            end
        end
        return lastColor
    end				
    
    ----------------------------------------------------------------
    -- Math helper functions
    ----------------------------------------------------------------
    function math.lerp(from,alpha,to)
        return from + (to-from) * alpha
    end
    
    function math.unlerp(from,pos,to)
        if ( to == from ) then
            return 1
        end
        return ( pos - from ) / ( to - from )
    end
    
    